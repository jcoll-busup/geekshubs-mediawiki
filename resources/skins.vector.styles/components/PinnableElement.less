@import '../../common/variables.less';

.vector-feature-page-tools-enabled .vector-pinnable-element {
	& > *:not( :last-child ) {
		// Apply bottom border to every children of pinnable elements except the last
		border-bottom: @border-width-base @border-style-base @colorGray14;
	}

	.vector-menu-heading {
		.mixin-vector-dropdown-menu-item();
		.mixin-vector-menu-heading();
	}

	.mw-list-item a {
		// Mirror styles from Dropdown.less
		.mixin-vector-dropdown-menu-item();
		color: @color-link;
	}
}

// TODO: merge this into the selector above after page tools is enabled everywhere
.vector-unpinned-container .vector-pinnable-element {
	padding: 4px 0;
}

// TODO: merge this into the selector above after page tools is enabled everywhere
.vector-pinned-container .vector-pinnable-element {
	// Make the heading border line up with the edge of the text
	// (Whereas in a dropdown, the border lines up with the edge of the dropdown container).
	.vector-pinnable-header,
	.vector-menu-heading,
	.mw-list-item a {
		padding-left: 0;
		padding-right: 0;
	}
}

/**
 * At lower resolutions, we want to hide the pinned containers since these
 * elements collapse (become unpinned) at this resolution via PinnableElement.js.
 * Although this is handled in JS, this rule prevents the pinned menu from
 * appearing on pageload, at low resolutions, before the JS kicks in.
 */
@media ( max-width: @max-width-tablet ) {
	.vector-pinned-container {
		display: none;
	}
}
